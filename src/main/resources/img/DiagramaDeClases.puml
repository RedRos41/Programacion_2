@startuml
'https://plantuml.com/sequence-diagram

class Usuario {
    - cedula: int
    - nombreCompleto: String
    - telefono: int
    - email: String
    - contraseña: String
    + iniciarSesion(correoElectronico: String, contraseña: String): void
    + cambiarContraseña(codigo: String, nuevaContraseña: String): void
}

class Cliente extends Usuario {
    - billeteraCliente: Billetera
    - reservas: List<Reserva>
    + registrarCliente(cliente: Cliente): void
    + editarCliente(cliente: Cliente): void
    + eliminarCliente(cliente: Cliente): void
    + recargarBilletera(valor: double): void
    + buscarAlojamiento(nombre: String, tipo: String, ciudad: String, precioMin: double, precioMax: double): List<Alojamiento>
    + realizarReserva(alojamiento: Alojamiento, fechaInicio: Date, fechaFin: Date, numHuespedes: int): Reserva
    + cancelarReserva(reserva: Reserva): void
    + agregarReseña(alojamiento: Alojamiento, reseña: String, valoracion: float): void
    + listarReservas(): List<Reserva>
}

class Administrador extends Usuario {
    - alojamientos: List<Alojamiento>
    - clientes: List<Cliente>
    - estadisticas: List<Estadistica>
    - ofertas: List<Oferta>
    - reseñas: List<Reseña>
    + crearAlojamiento(alojamiento: Alojamiento): void
    + modificarAlojamiento(alojamiento: Alojamiento): void
    + informacionAlojamiento(alojamiento: Alojamiento): void
    + listarAlojamiento(alojamiento: Alojamiento): void
    + eliminarAlojamiento(alojamiento: Alojamiento): void
    + crearOfertas(alojamiento: Alojamiento, oferta: Oferta): void
    + gestionarOfertas(alojamiento: Alojamiento, oferta: Oferta): void
    + obtenerEstadisticas(alojamiento: Alojamiento): Estadisticas
    + listarAlojamientosPopulares(ciudad: String): List<Alojamiento>
    + listarTiposAlojamientoRentables(): List<Alojamiento>

}

class Alojamiento {
    - nombreAlojamiento: String
    - ciudades: List<Ciudad>
    - descripcionAlojamiento: String
    - imagenAlojamiento: String
    - precioPorNocheAlojamiento: double
    - capacidadMaximaAlojamiento: int
    - servicios: List<Servicio>
}

class Casa extends Alojamiento {
    - AseoCasa: double
    - MantenimientoCasa: double
}

class Apartamento extends Alojamiento {
    - AseoApartamento: double
    - MantenimientoApartamento: double
}

class Hotel extends Alojamiento {
    + habitaciones: List<Habitacion>
}

class Habitacion {
    - numeroHabitacion: int
    - precioHabitacion: double
    - capacidadHabitacion: int
    - imagenHabitacion: String
    - descripcionHabitacion: String
}

class Billetera {
    - saldoBilletera: double
    + recargar(valor: double): void
    + pagar(valor: double): boolean
}

class Reserva {
    - clienteReserva: Cliente
    - alojamientoReserva: Alojamiento
    - fechaInicioReserva: Date
    - fechaFinReserva: Date
    - numHuespedesReserva: int
    + generarFactura(): Factura
}

class Factura {
    - subTotalFactura: double
    - totalFactura: double
    - fechaFactura: Date
    - codigoFactura: UUID
    + generarQR(): void
}

class Oferta {
    - descripcionOferta: String
    - descuentoOferta: float
    - fechaInicioOferta: Date
    - fechaFinOferta: Date
}

class Estadistica {
    - ocupacionPorcentual: double
    - gananciasTotales: double
}

class Reseña {
    - cometarioReseña: String
    - calificacionReseña: float
}

Cliente "1" --> "1" Billetera
Administrador "1" --> "many" Alojamiento
Cliente "1" --> "many" Reserva
Alojamiento "1" --> "many" Oferta
Alojamiento "1" --> "many" Reseña
Alojamiento "1" --> "many" Reserva
Reserva "1" --> "1" Factura
Factura "1" --> "1" QR
Hotel "1" --> "many" Habitacion

@enduml
